{"version":3,"sources":["components/TodoList/TodoList.tsx","types/SortType.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","_ref","todos","setSelectedTodo","selectTodoId","_jsxs","className","children","_jsx","map","todo","id","completed","classNames","title","type","onClick","SortType","TodoFilter","setFilteredTodos","loading","query","setQuery","useState","complitedQuery","setComplitedQuery","filter","setFilter","All","useEffect","filteredTodos","Active","Completed","toLocaleLowerCase","includes","debouncedChangeHandler","useCallback","debounce","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","cancelSelect","user","setUser","setLoading","userId","concat","finally","href","email","name","App","setTodos","selectedTodo","visibleTodos","setVisibleTodos","_Fragment","canselSelect","ReactDOM","render","document","getElementById"],"mappings":"6OAWO,MAAMA,EAA4BC,IAAA,IAAC,MACxCC,EAAK,gBACLC,EAAe,aACfC,GACDH,EAAA,OACCI,eAAA,SAAOC,UAAU,+BAA8BC,SAAA,CAC7CC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,MACJC,cAAA,MAAAD,SACEC,cAAA,QAAMF,UAAU,OAAMC,SACpBC,cAAA,KAAGF,UAAU,qBAGjBE,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,WAIRC,cAAA,SAAAD,SACGL,EAAMO,KAAKC,GACVL,eAAA,MAAI,UAAQ,OAAOC,UAAU,GAAEC,SAAA,CAC7BC,cAAA,MAAIF,UAAU,eAAcC,SAAEG,EAAKC,KACnCH,cAAA,MAAIF,UAAU,eAAcC,SACzBG,EAAKE,WACJJ,cAAA,QAAMF,UAAU,OAAO,UAAQ,gBAAeC,SAC5CC,cAAA,KAAGF,UAAU,qBAInBE,cAAA,MAAIF,UAAU,2BAA0BC,SACtCC,cAAA,KACEF,UAAWO,IACTH,EAAKE,UAAY,mBAAqB,mBACtCL,SAEDG,EAAKI,UAGVN,cAAA,MAAIF,UAAU,8BAA6BC,SACzCC,cAAA,UACE,UAAQ,eACRF,UAAU,SACVS,KAAK,SACLC,QAASA,IAAMb,EAAgBO,GAAMH,SAErCC,cAAA,QAAMF,UAAU,OAAMC,SACpBC,cAAA,KACEF,UAAWO,IACT,MACAT,IAAiBM,EAAKC,GAAK,eAAiB,oBA7BnBD,EAAKC,UAsCxC,E,oBCtEH,IAAKM,EAAQ,SAARA,GAAQ,OAARA,EAAQ,UAARA,EAAQ,gBAARA,EAAQ,sBAARA,CAAQ,MCWb,MAAMC,EAA8BjB,IAIpC,IAJqC,MAC1CC,EAAK,iBACLiB,EAAgB,QAChBC,GACDnB,EACC,MAAOoB,EAAOC,GAAYC,mBAAS,KAC5BC,EAAgBC,GAAqBF,mBAAS,KAC9CG,EAAQC,GAAaJ,mBAAmBN,EAASW,KAExDC,qBAAU,KACR,IAAIC,EAAgB,IAAI5B,GAExB,OAAQwB,GACN,KAAKT,EAASc,OACZD,EAAgBA,EAAcJ,QAAOhB,IAASA,EAAKE,YACnD,MACF,KAAKK,EAASe,UACZF,EAAgBA,EAAcJ,QAAOhB,GAAQA,EAAKE,YAKlDY,IACFM,EAAgBA,EAAcJ,QAAQhB,GACpCA,EAAKI,MAAMmB,oBACRC,SAASV,EAAeS,wBAI/Bd,EAAiBW,EAAc,GAC9B,CAACN,EAAgBE,EAAQN,EAASD,EAAkBjB,IAEvD,MAAMiC,EAAyBC,sBAC7BC,KAAUC,GAAUb,EAAkBa,IAAQ,KAC9C,IAeF,OACEjC,eAAA,QAAMC,UAAU,mBAAkBC,SAAA,CAChCC,cAAA,KAAGF,UAAU,UAASC,SACpBC,cAAA,QAAMF,UAAU,SAAQC,SACtBF,eAAA,UACE,UAAQ,eACRkC,SAAWC,GAAUb,EAAUa,EAAMC,OAAOH,OAAmB/B,SAAA,CAE/DC,cAAA,UAAQ8B,MAAOrB,EAASW,IAAIrB,SAAC,QAC7BC,cAAA,UAAQ8B,MAAOrB,EAASc,OAAOxB,SAAC,WAChCC,cAAA,UAAQ8B,MAAOrB,EAASe,UAAUzB,SAAC,qBAKzCF,eAAA,KAAGC,UAAU,qDAAoDC,SAAA,CAC/DC,cAAA,SACE,UAAQ,cACRO,KAAK,OACLT,UAAU,QACVoC,YAAY,YACZH,SAjCmBC,IACzB,MAAM,MAAEF,GAAUE,EAAMC,OAExBnB,EAASgB,GACTH,EAAuBG,EAAM,EA8BvBA,MAAOjB,IAETb,cAAA,QAAMF,UAAU,eAAcC,SAC5BC,cAAA,KAAGF,UAAU,8BAGde,GACCb,cAAA,QAAMF,UAAU,gBAAgBqC,MAAO,CAAEC,cAAe,OAAQrC,SAE9DC,cAAA,UACE,UAAQ,oBACRO,KAAK,SACLT,UAAU,SACVU,QAASA,KAvCnBM,EAAS,SACTG,EAAkB,cA2CX,E,MCjGJ,MAAMoB,EAAmBA,IAC9BrC,cAAA,OAAKF,UAAU,SAAS,UAAQ,SAAQC,SACtCC,cAAA,OAAKF,UAAU,sBCSnB,SAASwC,EAAOC,GAEd,MAAMC,EAZS,iEAYYD,EAAM,QAGjC,OAXYE,EAWA,IAVL,IAAIC,SAAQC,IACjBC,WAAWD,EAASF,EAAM,KAUzBI,MAAK,IAAMC,MAAMN,KACjBK,MAAKE,GAAOA,EAAIC,SAbrB,IAAcP,CAcd,CAEO,MCZMQ,EAA6BxD,IAA6B,IAA5B,KAAES,EAAI,aAAEgD,GAAczD,EAC/D,MAAO0D,EAAMC,GAAWrC,sBACjBH,EAASyC,GAActC,oBAAS,GAUvC,OARAM,qBAAU,KDUYiC,MCTpBD,GAAW,IDSSC,ECPZpD,EAAKoD,ODO0BhB,EAAG,UAAAiB,OAAiBD,KCNxDT,KAAKO,GACLI,SAAQ,IAAMH,GAAW,IAAO,GAClC,CAACnD,EAAKoD,SAGPzD,eAAA,OAAKC,UAAU,kBAAkB,UAAQ,QAAOC,SAAA,CAC9CC,cAAA,OAAKF,UAAU,qBAEdc,EACCZ,cAACqC,EAAM,IAEPxC,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBF,eAAA,UAAQC,UAAU,kBAAiBC,SAAA,CACjCC,cAAA,OACEF,UAAU,0CACV,UAAQ,eAAcC,SAAA,SAAAwD,OAEZrD,EAAKC,MAIjBH,cAAA,UACEO,KAAK,SACLT,UAAU,SACV,UAAQ,cACRU,QAAS0C,OAIbrD,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BC,cAAA,KAAGF,UAAU,QAAQ,UAAQ,cAAaC,SACvCG,EAAKI,QAGRT,eAAA,KAAGC,UAAU,QAAQ,UAAQ,aAAYC,SAAA,CAEvCC,cAAA,UACEF,UAAWO,IAAWH,EAAKE,UACvB,mBACA,mBAAmBL,SAEtBG,EAAKE,UACF,OACA,YAGL,OAEDJ,cAAA,KAAGyD,KAAI,UAAAF,OAAgB,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMO,OAAQ3D,SAC1B,OAAJoD,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,kBAMb,EC/DGC,EAAgBA,KAC3B,MAAOlE,EAAOmE,GAAY9C,mBAAiB,KACpCH,EAASyC,GAActC,oBAAS,IAChC+C,EAAcnE,GAAmBoB,mBAAsB,OACvDgD,EAAcC,GAAmBjD,mBAAiB,IAEzDM,qBAAU,KACRgC,GAAW,GFKef,EAAY,UEFnCO,KAAKgB,GACLL,SAAQ,IAAMH,GAAW,IAAO,GAClC,IAMH,OACExD,eAAAoE,WAAA,CAAAlE,SAAA,CACEC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,OAAKF,UAAU,YAAWC,SACxBF,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAIF,UAAU,QAAOC,SAAC,WAEtBC,cAAA,OAAKF,UAAU,QAAOC,SACpBC,cAACU,EAAU,CACThB,MAAOA,EACPiB,iBAAkBqD,EAClBpD,QAASA,MAIbZ,cAAA,OAAKF,UAAU,QAAOC,SACnBa,EACCZ,cAACqC,EAAM,IAEPrC,cAACR,EAAQ,CACPE,MAAOqE,EACPpE,gBAAiBA,EACjBC,aAAckE,EAAeA,EAAa3D,IAAM,aAO3D2D,GACC9D,cAACiD,EAAS,CAAC/C,KAAM4D,EAAcZ,aAlChBgB,KACnBvE,EAAgB,KAAK,MAmClB,EC3DPwE,IAASC,OACPpE,cAAC4D,EAAG,IACJS,SAASC,eAAe,Q","file":"static/js/main.1007ca62.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectTodoId: number;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                todo.completed ? 'has-text-success' : 'has-text-danger',\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    selectTodoId === todo.id ? 'fa-eye-slash' : 'fa-eye',\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","export enum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport { SortType } from '../../types/SortType';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setFilteredTodos: (todos: Todo[]) => void;\n  loading: boolean\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  setFilteredTodos,\n  loading,\n}) => {\n  const [query, setQuery] = useState('');\n  const [complitedQuery, setComplitedQuery] = useState('');\n  const [filter, setFilter] = useState<SortType>(SortType.All);\n\n  useEffect(() => {\n    let filteredTodos = [...todos];\n\n    switch (filter) {\n      case SortType.Active:\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case SortType.Completed:\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      default: break;\n    }\n\n    if (complitedQuery) {\n      filteredTodos = filteredTodos.filter((todo) => (\n        todo.title.toLocaleLowerCase()\n          .includes(complitedQuery.toLocaleLowerCase())\n      ));\n    }\n\n    setFilteredTodos(filteredTodos);\n  }, [complitedQuery, filter, loading, setFilteredTodos, todos]);\n\n  const debouncedChangeHandler = useCallback(\n    debounce((value) => setComplitedQuery(value), 400),\n    [],\n  );\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    debouncedChangeHandler(value);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n    setComplitedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilter(event.target.value as SortType)}\n          >\n            <option value={SortType.All}>All</option>\n            <option value={SortType.Active}>Active</option>\n            <option value={SortType.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChangeQuery}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleClearQuery()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  cancelSelect: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, cancelSelect }) => {\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={cancelSelect}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames(todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const canselSelect = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setVisibleTodos}\n                loading={loading}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectTodoId={selectedTodo ? selectedTodo.id : -1}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} cancelSelect={canselSelect} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}